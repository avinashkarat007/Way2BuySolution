@model Way2Buy.Models.ProductViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}

<style>
    .invisibleDiv, .justSelectedImage {
        display: none;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
       

        $('input[type="checkbox"]').click(function () {
            $(".OfferDiv").toggle();
        });
       
        if ($("#Product_IsOfferItem").is(':checked')) {
            $(".OfferDiv").toggle();
        }


        $('input[type="file"]').change(function () {

            if (this.files && this.files[0]) {
                var reader = new FileReader();

                $(".ImageOnEdit").hide();
                $(".justSelectedImage").show();
                
                reader.onload = function (e) {
                    $('.justSelectedImage')
                        .attr('src', e.target.result)
                        .width(150)
                        .height(150);
                };
                reader.readAsDataURL(this.files[0]);

                $("#justSelectedImage").show();
            }
        });
              
    });
</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@using (Html.BeginForm("Save", "Product",
                                        FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    if (Model.Product != null)
    {
        @Html.HiddenFor(m => m.Product.ProductId)
    }
    <div class="row">
        <div class="col-md-3 col-lg-3">

        </div>
        <div class="col-md-9 col-lg-9">
            <form class="form-horizontal">
                <h4>Product</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="container">
                    <div class="row">
                        <div class="form-group col-sm-9">
                            <div class="row">
                                @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "col-form-label col-sm-3" })
                                <div class="col-sm-9">
                                    @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-sm-9">
                            <div class="row">
                                @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "col-form-label col-sm-3" })
                                <div class="col-sm-9">
                                    @Html.TextAreaFor(model => model.Product.Description, new { @class = "form-control", rows = "3" })
                                    @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-sm-9">
                            <div class="row">
                                @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "col-form-label col-sm-3" })
                                <div class="col-sm-9">
                                    @Html.DropDownListFor(model => model.Product.CategoryId, new SelectList(Model.Categories, "CategoryId", "CategoryName"), "--Select a category--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Product.CategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-sm-9">
                            <div class="row">
                                @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "col-form-label col-sm-3" })
                                <div class="col-sm-9">
                                    @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-sm-9">
                            <div class="row">
                                @Html.LabelFor(model => model.Product.IsOfferItem, htmlAttributes: new { @class = "col-form-label col-sm-3" })
                                <div class="col-sm-4">
                                    @Html.CheckBoxFor(model => model.Product.IsOfferItem, false)
                                    @Html.ValidationMessageFor(model => model.Product.IsOfferItem, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-sm-9 OfferDiv invisibleDiv">
                            <div class="row">
                                @Html.LabelFor(model => model.Product.OfferPrice, htmlAttributes: new { @class = "col-form-label col-sm-3" })
                                <div class="col-sm-9">
                                    @Html.EditorFor(model => model.Product.OfferPrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Product.OfferPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-sm-12">
                            <div class="row">
                                <label class="col-form-label">Choose Image</label>
                                <input type="file" name="Image" id="imgUpload" size="40" class="form-control-file btn btn-light">
                                <span>
                                    <img class="justSelectedImage" alt="imageLoading.." width="100" height="100" />
                                </span>
                                @if (Model.Product != null)
                                {                                                                    
                                    <span class="form-control-static ImageOnEdit">
                                        <img src="@if (Model.Product.ImageData != null)
                                                  {
                                                      @Url.Action("GetImage", "Product", new {productId = Model.Product.ProductId})
                                                  }" height="150" width="150" />
                                    </span>
                                }
                            </div>
                        </div>
                        <div class="form-group col-sm-9">
                            <div class="row">

                                <div class="col-sm-9">
                                    <div class="col-sm-offset-2 col-md-10">
                                        <button type="submit" class="btn btn-info">Submit</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

